{"tagline":"A node.js module for simple(r) handling of radix 2 through 36 base encodings.","note":"Don't delete this file! It's used internally to help with page regeneration.","body":"### Base(x) In --> Base(x) Out\r\n\r\n## Install\r\n\tnpm install baseit\r\n\r\n## Basic Use\r\n```javascript\r\nvar baseit = require('baseit');\r\n\r\nbaseit({\r\n\tinput: \t120000,\r\n\tto: \t36,\r\n}, function (err, a) {\r\n\tif (err) throw err;\r\n\r\n\tconsole.log(a);\t\t// \"2klc\"\r\n});\r\n````\r\n\r\n## Slightly Less Basic Use\r\n```javascript\r\nvar baseit = require('baseit');\r\n\r\nbaseit({\r\n\tinput: \t1296,\r\n\tfrom: \t12,\r\n\tto: \t36,\r\n\tdigits: 6\r\n}, function (err, a) {\r\n\tif (err) throw err;\r\n\r\n\tconsole.log(a);\t\t// \"0001n6\"\r\n});\r\n````\r\n\r\n## Parameters\r\n####input (Required)\r\nInteger or string to be converted.\r\n\r\n####to (Optional)\r\nTarget encoding integer. If not specified, \"to\" will default to 10. Example for Base24: { to: 24 }.\r\n\r\n####from (Optional)\r\nInput encoding integer. If not specified, \"from\" will default to 10. Example for Base8: { from: 8 }.\r\n\r\n####digits (Optional)\r\nMinimum number of digits to return. Will append leading \"zeros\" to meet digit requirement. Example: { digits: 6 }\r\n\r\n## Why u no Base64!?\r\nNode.js already has a good way of [handling Base64 encoding](http://nodejs.org/docs/v0.3.1/api/buffers.html#new_Buffer).\r\n\r\n## Testing\r\n\tvows test/*","name":"Baseit","google":"UA-33281153-1"}